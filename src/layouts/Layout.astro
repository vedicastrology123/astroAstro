---
import astroLogo from '../assets/astro.svg';
import background from '../assets/background.svg';
import '../styles/global.css';
import Navigation from '../components/Navigation.astro';
import Menu from '../components/Menu.astro';
import ScrollContainer from '../components/ScrollContainer.astro';
import Announcements from '../components/Announcements.astro';
import Footer from '../components/Footer.astro';
import { pwaAssetsHead } from 'virtual:pwa-assets/head';
import { pwaInfo } from 'virtual:pwa-info';

import AstroSeoInfo from '../components/AstroSeoInfo.astro';
import AuthorSchema from '../components/AuthorSchema.astro';
import PageSchema from '../components/PageSchema.astro';
import JSONLD from '../components/JsonLd.astro';
import siteDefaults from '../data/siteData.json';

/*export interface Props {
    title: string;
    description: string;
    keywords: string[];
    author: string;
    canonical?: string;
    // Additional props can be defined here
}*/

//type Props = CollectionEntry<'blog'>['data'];
//const { title } = Astro.props;

const { seo: seoOverrides = {} } = Astro.props; // Get page-specific overrides
const seo = { ...siteDefaults.default, ...seoOverrides }; // Merge defaults with overrides

const canonicalURL = new URL(Astro.url.pathname, Astro.url);
const siteURL = new URL("/", Astro.url);
---

<!doctype html>
<html lang="en">
	<head>
		<slot name="structured-data" />

		{pwaAssetsHead.links.map(link => <link {...link} />)}
    	{pwaAssetsHead.themeColor && <meta name="theme-color" content={pwaAssetsHead.themeColor.content} />}
    	{pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
		<script>
  			import { registerSW } from 'virtual:pwa-register';
			registerSW({ immediate: true });
		</script>
		<AstroSeoInfo slot="head" {...Astro.props} />
		<AuthorSchema slot="head" {...Astro.props} />
		<PageSchema slot="head" {...Astro.props} />
		<Fragment slot="head">
			<JSONLD frontmatter={seo} url={canonicalURL} />
		</Fragment>

		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="color-scheme" content="dark" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Import core Ionic CSS -->
        <link rel="stylesheet" href="/node_modules/@ionic/core/css/core.css">
        <link rel="stylesheet" href="/node_modules/@ionic/core/css/normalize.css">
        <link rel="stylesheet" href="/node_modules/@ionic/core/css/structure.css">
        <link rel="stylesheet" href="/node_modules/@ionic/core/css/typography.css">
        <!-- Optional: Import platform-specific styles if needed -->
        <link rel="stylesheet" href="/node_modules/@ionic/core/css/ionic.bundle.css"> 
        <!-- You might also consider importing specific themes like: -->
        <link rel="stylesheet" href="/node_modules/@ionic/core/css/palettes/dark.always.css">
		<link rel="stylesheet" href="/src/styles/global.css">
		<script type="module" src="/node_modules/@ionic/core/dist/ionic/ionic.esm.js"></script>
		<script nomodule src="/node_modules/@ionic/core/dist/ionic/ionic.js"></script>
		<script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
		<script>
		document.getElementById('hamburger').addEventListener('click', () => {
			document.getElementById('nav').classList.toggle('hidden');
		});
		</script>
		<link rel="sitemap" href="/sitemap-index.xml" />
	</head>
	<body>
		<ion-app>
			<Navigation />
				<div id="container">
					<img id="background" src={background.src} alt="" fetchpriority="high" />
					<main>
					<Menu />
						<ion-content>
							<slot />
							<Announcements />
						</ion-content>
					</main>
				</div>
			<Footer />
		</ion-app>
	</body>
</html>

<style>
	ion-content {
	--padding-top: 20px;
	--padding-bottom: 20px;
	--padding-start: 25%; /* for left padding in LTR, right in RTL */
	--padding-end: 75px;   /* for right padding in LTR, left in RTL */
	}
</style>