
<dialog id="welcomeDialog">
  <p style="text-align: center;"><h5>Welcome to our Vedic Astrology website!</h5></p>
  <p> For a <a href="https://api.whatsapp.com/send/?phone=918610386346&text&type=phone_number&app_absent=0" target="_blank"> quick Whatsapp chat with Steve Hora, click here...</a></p>
  <p><a href="https://docs.google.com/forms/d/e/1FAIpQLSf2SIxzRL87dW-pwnVLh5Q484ou7vLD1Yx-cKBLD7iXQvR3_g/viewform?pli=1" target="_blank"> Birth Horoscope predictions, pleae fill this form...</a></p>
  <form method="dialog">
    <button id="closeDialog">Close</button>
  </form>
</dialog>

<script>
  import { isDialogShown } from '../utils/dialog.js';

  const dialog = document.getElementById('welcomeDialog');
  const closeBtn = document.getElementById('closeDialog');
  closeBtn.classList.add('close-button');

  let cookieName = 'astro_cookie_name';
  let cookieValue = 'astro_cookie_value';
  let cookieExists = false;
  let myCookieValue = "";
  
  document.addEventListener('DOMContentLoaded', () => {
      myCookieValue = getCookie(cookieName);
      if (myCookieValue != null) {
        cookieExists = true;
      }
      else {
          // Open the dialog only if it hasn't been shown yet.
        if (!isDialogShown.get()) {
          dialog.showModal();
          isDialogShown.set(true);
        }
      }
  });

  // Set the store back to false when the dialog is closed.
  closeBtn.addEventListener('click', () => {
    isDialogShown.set(false);
    if (cookieExists) {
      try {
        // Assuming the cookie value is a JSON string with an 'expiry' field
        const cookieData = JSON.parse(myCookieValue);
        if (cookieData.expiry && cookieData.expiry < Date.now()) {
          //console.log('myCookie has expired.');
          // Perform actions for an expired cookie, e.g., delete it or re-authenticate
          setCookie(cookieName, cookieValue);
        }
      } catch (e) {
        console.error('Error parsing cookie data:', e);
      }
    } else {
        setCookie(cookieName, cookieValue);
    }
  });

  // function hasCookie(cookieName) {
  //   return document.cookie.split(';').some(c => c.trim().startsWith(cookieName + '='));
  // }

  function setCookie(cookieName, cookieValue) {
    const threeDaysInMilliseconds = 1 * 24 * 60 * 60 * 1000;
    const expirationDate = new Date(Date.now() + threeDaysInMilliseconds);
    const expiresUTCString = expirationDate.toUTCString();

    document.cookie = `${cookieName}=${cookieValue}; Expires=${expiresUTCString}; Path=/; SameSite=Lax; Secure`;
  }

    // Function to get a specific cookie's value
  function getCookie(cookieName) {
    const cookies = document.cookie.split(';');
    for (let i = 0; i < cookies.length; i++) {
      let cookie = cookies[i].trim();
      // Does this cookie string begin with the name we want?
      if (cookie.startsWith(cookieName + '=')) {
        return cookie.substring(cookieName.length + 1);
      }
    }
    return null;
  }
</script>

<style>
  /* Base dialog styles */
  dialog {
    padding: 2rem;
    border: none;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  /* Backdrop styling */
  dialog::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }

  /* Your theme styles below */
  dialog[data-theme="dark"] {
    background-color: #2c2c2c;
    color: white;
  }

  dialog[data-theme="light"] {
    background-color: #ffffff;
    color: black;
  }

  .close-button {
    background-color: #333;
    color: white;
    padding: 8px 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
</style>